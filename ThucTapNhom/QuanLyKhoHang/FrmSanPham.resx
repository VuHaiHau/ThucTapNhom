<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="bt_quaylai.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABwAAAAcCAYAAAByDd+UAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAO
        wwAADsMBx2+oZAAABH1JREFUSEvtlWtMU2ccxo8MNS5ZZkRNlsXEXZMlU+RaECiIcqcUcIBQYAsY7vdy
        abm10CkEqHLpgXJpdQwZ11IKk8mlICCwAXITxsacUyZhQ832Zd/cs7drA4bMsGzrsg97kufDed+c88vz
        f943h/ova5fO/4L8BHsMPCtSKVZFPOXX8oJuVU8SCAwM2OUfmCU1/fhSQNVjykP8qm5HDyKwvWdpZ+PE
        pvtZ9ZM4xJGB8ih9S7f7D8u1bC9JFmmW3Pogkh5HqnwKRpw6PQE1MK+yXEtuy6Mk2TSipVPgyqf1BCSH
        woAtiWRwWx/xGxYQL5tDlHQaqVdm9AAknb3oI3VlcBWrGQ13wK1fQoJ8AdHVs0iRz+Lo+XocDq6bORRc
        O7bdBzXm1DzX5L1BA8/yGB2JSDNGFh3OSFU84DUuIfOTFaR+vIzEK4uIqZ1DpPQ2OJdGwBEP41yRGn6F
        ffC9cAPs/B6w8q7DU/gp3HO74ZrbBedsFZyyVDid2QlHficcMpQIKurFbrbkJy3sPfE+TWfW6e0bF5Xf
        Ik9xH5lNd5HW8BWSri4htm4eEVW3EVYxiZBLYwgsGoZfwQC8Rb3wFPTANacbzlldOM1X4RSvE8y0Dthw
        O3AyRQGr5HZYJLThffEAdntX/kJR9gJDA+/yODue8jHdtwZxzzpEylVktdxDeuMKkj/6ErGyBURIZxAm
        mUTo5XEEFmuAai1QqANm/kngvrNVbMecrjW6fw3VN5+gtHcDF1UPkdP6HTIavyHAZcTJ7iCS9BgumUJo
        6d8Evh5xbbWk5yEq1D+j5MYTiFQ/gNe8ioT6u4isW0aYdBEhklkElk7Bv2QCvoUjYInUcBf0kq56CKSb
        dKSBKGGbqgVZJyvASGqHZWIbzAnMNL4VoeJ+LfBgsHw0iiRIa91A3LV1hMlW4S9ZAatkES4FszgjmoSD
        cALMnBHY8Adhld4Li5TrME9SwTShAyZxbTCObdE6Ruvjm27eNKe4jwBp0qFP5buvnW9YipKTNPLvEVh1
        D16Xl+FUMA9H0TSYws9hk30LVvybYKQPwIL7GUwTu2ESr4RxXDv5WCuORTfvaC1Qc2go7KK8yj2OhNcv
        BtMzT/0lX8OteBFnLszgVP4U7AQTOJk9CiveECzT+mGW0gOTxC6ciFPieGw7jpEkfwTY7q2EGpELT3mW
        2RtxZKPO+YNgFc/9DrMXfgHbnDFYZw6DkaEmwD6Yk3GaJapIwg4Cbd8c407mFOs63BJJ6i19w4gjH3IR
        DcHpw0nY5W6ls+WrYZ3WBQdySOx5KjB5SjAzOsBMV+zsDAXchV0wZNPrOtgz8q54+5VQ2bxX4SgB3tKm
        S1fDQzSMA4F1MPSmFYY+9NW/4GqKVemoo2wTq8LpcIh8wU008JSZremuD+55g3g5oFZf/0MyXla5zf5z
        1YPWaZ2/Mvm9cBMO6BOokQYqeXN/QI2aSTpjizTAGn0CdXKn3zEKqlkIKx2EUZBeEz4jT9qCwEb2+NLj
        lLP4gG5Vz3K5fJRi00d0T//rOaKo3wDzIHIwTibkuAAAAABJRU5ErkJggg==
</value>
  </data>
  <metadata name="txb_ncc.Locked" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="$this.TrayHeight" type="System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>45</value>
  </metadata>
</root>